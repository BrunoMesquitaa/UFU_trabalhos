if(!(any(grepl("package:plyr", search())) & any(grepl("package:dplyr", search())))){
if(!any(grepl("package:plyr", search())) & !any(grepl("package:dplyr", search()))){
if (!require('plyr')) install.packages('plyr'); library('plyr')
} else if (any(grepl("package:dplyr", search()))){
cat('detach do dplyr\n')
detach("package:dplyr", unload = T, force = T)
if (!require('plyr')) install.packages('plyr'); library('plyr')
}
if (!require('dplyr')) install.packages('dplyr'); library('dplyr')
}
if (!require('htmlwidgets'))install.packages("htmlwidgets");library(htmlwidgets)
if (!require('sp'))install.packages("sp");library(sp)
if (!require('rgeos'))install.packages("rgeos");library(rgeos)
if(!require('tidyverse'))install.packages("tidyverse",dependencies = T);library(tidyverse)
if(!require('plotly'))install.packages("plotly");library(plotly)
if(!require('lubridate'))install.packages("lubridate");library(lubridate)
if(!require('fastDummies'))install.packages("fastDummies");library(fastDummies)
if(!require('htmlwidgets'))install.packages("htmlwidgets");library(htmlwidgets)
if(!require('RColorBrewer'))install.packages("RColorBrewer");library(RColorBrewer)
if(!require('readr'))install.packages("readr");library(readr)
data = '2023_02'
ay <- list(
tickfont = list(color = "red"),
overlaying = "y",
side = "right",
title = "Porcentagem",
color = "red")
setwd("~/GitHub/Dashes/HTMLs")
tipo=Residencial_Vertical
tipo='Residencial_Vertical'
index <- read_csv(paste0("~/github/MIM/dados/index_",tipo,"_",data,".csv"))
index = index %>% group_by(month_year) %>%
summarise(ind_cidade = mean(ind_cidade))
index$var_mes <- NA
for (i in c(1:(nrow(index)-1)) ) {
index[i+1,'var_mes'] <- (index[i+1,'ind_cidade']-index[i,'ind_cidade'])/index[i+1,'ind_cidade']
}
index <- index %>%
mutate(ano = str_sub(month_year,1,4)) %>%
group_by(ano) %>%
mutate(acumulado_ano = (cumprod(replace_na(var_mes, 0) + 1 ) - 1)
#,acumulado_ano = cumsum(replace_na(var_mes, 0))
)
index$acumulado_12meses <- NA
for (i in c(13:nrow(index)) ) {
index[i,'acumulado_12meses'] <- (cumprod(index[c((i-11):i),'var_mes']  + 1 )[[1]][12] - 1)
}
View(index)
index <- read_csv(paste0("~/GitHub/MIM/dados/index_",tipo,"_",data,".csv"))
index$acumulado_12meses <- NA
index$acumulado_ano <- NA
index$var_mes <- NA
index$ano <- NA
df = data.frame()
bairros = unique(index$Nome)
bairros
tipo
index <- read_csv(paste0("~/GitHub/MIM/dados/index_",tipo,"_",data,".csv"))
index <- read_csv(paste0("~/github/MIM/dados/index_",tipo,"_",data,".csv"))
index$acumulado_12meses <- NA
index$acumulado_ano <- NA
index$var_mes <- NA
index$ano <- NA
df = data.frame()
bairros = unique(index$Nome)
bairros
bairros[3]
bairro = bairros[3]
temp = index[index$Nome == bairro,]
if (sd(temp$ind_geral,na.rm = T) > 250 | is.na(sd(temp$ind_geral,na.rm = T)) | min(temp$ind_geral) == 0 ) {
next
}
sd(temp$ind_geral,na.rm = T)
temp$ind_geral
min(temp$ind_geral)
View(temp)
View(index)
bairros
bairro = bairros[62]
temp = index[index$Nome == bairro,]
if (sd(temp$ind_geral,na.rm = T) > 250 | is.na(sd(temp$ind_geral,na.rm = T)) | min(temp$ind_geral) == 0 ) {
next
}
min(temp$ind_geral)
for (i in c(1:(nrow(temp)-1)) ) {
temp[i+1,'var_mes'] <- (temp[i+1,'ind_geral']-temp[i,'ind_geral'])/temp[i+1,'ind_geral']
}
View(temp)
View(temp)
if (sd(temp$var_mes,na.rm = T) > 0.2) {
next
}
sd(temp$var_mes,na.rm = T)
temp$var_mes
View(temp)
bairros = unique(index$Nome)
for (bairro in bairros) {
temp = index[index$Nome == bairro,]
if (sd(temp$ind_geral,na.rm = T) > 250 | is.na(sd(temp$ind_geral,na.rm = T)) | min(temp$ind_geral) == 0 ) {
next
}
for (i in c(1:(nrow(temp)-1)) ) {
temp[i+1,'var_mes'] <- (temp[i+1,'ind_geral']-temp[i,'ind_geral'])/temp[i+1,'ind_geral']
}
if (sd(temp$var_mes,na.rm = T) > 0.2) {
break
}
temp <- temp %>%
mutate(ano = str_sub(month_year,1,4)) %>%
group_by(ano) %>%
mutate(acumulado_ano = (cumprod(replace_na(var_mes, 0) + 1 ) - 1)
)
for (i in c(13:nrow(temp)) ) {
temp[i,'acumulado_12meses'] <- (cumprod(temp[c((i-11):i),'var_mes']  + 1 )[[1]][12] - 1)
}
df = rbind(df,temp)
}
sd(temp$var_mes,na.rm = T)
bairros = unique(index$Nome)
for (bairro in bairros) {
temp = index[index$Nome == bairro,]
if (sd(temp$ind_geral,na.rm = T) > 250 | is.na(sd(temp$ind_geral,na.rm = T)) | min(temp$ind_geral) == 0 ) {
next
}
for (i in c(1:(nrow(temp)-1)) ) {
temp[i+1,'var_mes'] <- (temp[i+1,'ind_geral']-temp[i,'ind_geral'])/temp[i+1,'ind_geral']
}
if (sd(temp$var_mes,na.rm = T) > 0.2) {
print(sd(temp$var_mes,na.rm = T))
}
temp <- temp %>%
mutate(ano = str_sub(month_year,1,4)) %>%
group_by(ano) %>%
mutate(acumulado_ano = (cumprod(replace_na(var_mes, 0) + 1 ) - 1)
)
for (i in c(13:nrow(temp)) ) {
temp[i,'acumulado_12meses'] <- (cumprod(temp[c((i-11):i),'var_mes']  + 1 )[[1]][12] - 1)
}
df = rbind(df,temp)
}
df = data.frame()
bairros = unique(index$Nome)
for (bairro in bairros) {
temp = index[index$Nome == bairro,]
if (sd(temp$ind_geral,na.rm = T) > 250 | is.na(sd(temp$ind_geral,na.rm = T)) | min(temp$ind_geral) == 0 ) {
next
}
for (i in c(1:(nrow(temp)-1)) ) {
temp[i+1,'var_mes'] <- (temp[i+1,'ind_geral']-temp[i,'ind_geral'])/temp[i+1,'ind_geral']
}
if (sd(temp$var_mes,na.rm = T) > 0.2) {
next
}
temp <- temp %>%
mutate(ano = str_sub(month_year,1,4)) %>%
group_by(ano) %>%
mutate(acumulado_ano = (cumprod(replace_na(var_mes, 0) + 1 ) - 1)
)
for (i in c(13:nrow(temp)) ) {
temp[i,'acumulado_12meses'] <- (cumprod(temp[c((i-11):i),'var_mes']  + 1 )[[1]][12] - 1)
}
df = rbind(df,temp)
}
View(df)
df = data.frame()
bairros = unique(index$Nome)
for (bairro in bairros) {
temp = index[index$Nome == bairro,]
if (sd(temp$ind_geral,na.rm = T) > 250 | is.na(sd(temp$ind_geral,na.rm = T)) | min(temp$ind_geral) == 0 ) {
next
}
for (i in c(1:(nrow(temp)-1)) ) {
temp[i+1,'var_mes'] <- (temp[i+1,'ind_geral']-temp[i,'ind_geral'])/temp[i+1,'ind_geral']
}
if (sd(temp$var_mes,na.rm = T) > 0.2) {
next
}
# temp <- temp %>%
#   mutate(ano = str_sub(month_year,1,4)) %>%
#   group_by(ano) %>%
#   mutate(acumulado_ano = (cumprod(replace_na(var_mes, 0) + 1 ) - 1)
#   )
#
# for (i in c(13:nrow(temp)) ) {
#   temp[i,'acumulado_12meses'] <- (cumprod(temp[c((i-11):i),'var_mes']  + 1 )[[1]][12] - 1)
# }
df = rbind(df,temp)
}
?idw
if(!(any(grepl("package:plyr", search())) & any(grepl("package:dplyr", search())))){
if(!any(grepl("package:plyr", search())) & !any(grepl("package:dplyr", search()))){
if (!require('plyr')) install.packages('plyr'); library('plyr')
} else if (any(grepl("package:dplyr", search()))){
cat('detach do dplyr\n')
detach("package:dplyr", unload = T, force = T)
if (!require('plyr')) install.packages('plyr'); library('plyr')
}
if (!require('dplyr')) install.packages('dplyr'); library('dplyr')
}
if (!require('htmlwidgets'))install.packages("htmlwidgets");library(htmlwidgets)
if (!require('sp'))install.packages("sp");library(sp)
if (!require('rgeos'))install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source");library(rgeos)
if(!require('sf'))install.packages("sf") ;library(sf)
if (!require('gstat'))install.packages("gstat");library(gstat)
if (!require('raster'))install.packages("raster");library(raster)
if (!require('leaflet'))install.packages("leaflet");library(leaflet)
if (!require('magrittr'))install.packages("magrittr");library(magrittr)
if (!require('htmltools'))install.packages("htmltools");library(htmltools)
if (!require('data.table'))install.packages("data.table");library(data.table)
if (!require('writexl'))install.packages("writexl");library(writexl)
if (!require('spdep'))install.packages("spdep");library(spdep)
if(!require('KernSmooth'))install.packages("KernSmooth");library(KernSmooth)
#MAPS
if(!require('readxl'))install.packages("readxl") ;library(readxl)
if(!require('reshape'))install.packages("reshape") ;library(reshape)
#SHAPE
if (!require('rgdal'))install.packages("rgdal", repos="http://R-Forge.R-project.org", type="source");library(rgdal)
if(!require('plotly'))install.packages("plotly") ;library(plotly)
if(!require('readr'))install.packages("readr") ;library(readr)
if(!require('stringr'))install.packages("stringr") ;library(stringr)
library(readr)
iptu_endereco <- read_csv("github/MIM/dados/iptu_endereco.csv")
View(iptu_endereco)
shapefile <- readOGR(dsn="~/GitHub/MIM/dados/shp/", layer="DISTRITO_MUNICIPAL_SP_SMDUPolygon")
if (!require('plotly'))install.packages("plotly");library(plotly)
if (!require('randomcoloR'))install.packages("randomcoloR");library(randomcoloR)
if (!require('htmlwidgets'))install.packages("htmlwidgets");library(htmlwidgets)
if (!require("dplyr")) install.packages("dplyr");library(dplyr)
if (!require("plyr")) install.packages("plyr");library(plyr)
if (!require('dplyr'))install.packages("dplyr");library(dplyr)
if (!require('lubridate'))install.packages("lubridate");library(lubridate)
if (!require('readr'))install.packages("readr");library(readr)
if (!require('rgdal'))install.packages("rgdal");library(rgdal)
if (!require('stringr'))install.packages("stringr");library(stringr)
if (!require("deflateBR")) install.packages("deflateBR");library(deflateBR)
if (!require('sp'))install.packages('sp', dependencies=T);library(sp)
if (!require('rgeos'))install.packages("rgeos");library(rgeos)
if (!require('rbcb'))install.packages('rbcb');library(rbcb)
if (!require('sidrar'))install.packages('sidrar');library(sidrar)
if (!require('readr'))install.packages("readr");library(readr)
if (!require('zoo'))install.packages('zoo');library(zoo)
if (!require('reshape'))install.packages("reshape");library(reshape)
if (!require('tidyr'))install.packages("tidyr");library(tidyr)
shapefile <- readOGR(dsn="~/GitHub/MIM/dados/shp/", layer="DISTRITO_MUNICIPAL_SP_SMDUPolygon")
shapefile <- readOGR(dsn="~/github/MIM/dados/shp/", layer="DISTRITO_MUNICIPAL_SP_SMDUPolygon")
shapefile <- spTransform(shapefile, CRS("+proj=longlat +datum=WGS84"))
View(shapefile)
shapefile@bbox
View(iptu_endereco)
setwd("~/github/UFU_trabalhos")
tinytex::install_tinytex()
bx=c(SC,CM,HA_5,HA_1,HB_5,HB_1)
SC <- c( 2.9, 3.2, 2.4)
CM <- c( 8.0, 10.6, 9.8)
HA_5 <- c(5.6, 6.0, 6.7)
HA_1 <- c( 7.7, 8.8, 7.9)
HB_5 <- c( 4.3, 6.5, 5.6)
HB_1 <- c( 5.5, 5.1, 6.9)
bx=c(SC,CM,HA_5,HA_1,HB_5,HB_1)
